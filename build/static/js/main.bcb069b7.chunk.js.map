{"version":3,"sources":["App.module.css","components/Cities/Cities.module.css","components/Selected/Selected.module.css","components/Selected/City/City.module.css","components/Search/Search.module.css","components/Cities/City/City.module.css","components/Cities/City/City.jsx","components/Cities/Cities.jsx","redux/reducers/localState/GetLocalState.js","redux/reducers/citiesReducer.js","components/Cities/CitiesContainer.jsx","components/Selected/City/City.jsx","components/Selected/Selected.jsx","components/Selected/SelectedContainer.jsx","components/Search/Search.jsx","components/Search/SearchContainer.jsx","App.js","redux/store.js","index.js"],"names":["module","exports","City","props","className","style","city","onClick","click","name","Cities","cities","map","newText","length","showCity","addCity","city_id","key","content","GetLocalState","localStateStr","localStorage","getItem","JSON","parse","require","initialState","selectedCities","setItem","stringify","setLocalState","state","clear","citiesReducer","copyState","action","type","isSelected","id","filter","text","CitiesContainer","connect","dispatch","addCityActionCreator","newName","i","dlt","Selected","removeCity","SelectedContainer","removeCityActionСreator","Search","search","input_city","onChange","event","target","value","updateNewText","placeholder","SearchContainer","toUpperCase","slice","updateNewTextActionCreator","App","bg","main","scroll","reducers","combineReducers","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcb069b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"App_bg__15VTS\",\"main\":\"App_main__NA9_R\",\"cities\":\"App_cities__17RSx\",\"scroll\":\"App_scroll__wGXIX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Cities_content__3xQq8\",\"cities\":\"Cities_cities__1Hs3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Selected_content__J-Lqo\",\"cities\":\"Selected_cities__3G9N5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"city\":\"City_city__3t_cM\",\"dlt\":\"City_dlt__1epZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3QlTN\",\"input_city\":\"Search_input_city__3yx_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"city\":\"City_city__3Yims\"};","import React from 'react'\r\nimport style from './City.module.css'\r\n\r\nconst City = (props) => {\r\n    return (\r\n        <div className={style.city} onClick={props.click}>\r\n            <h2>{props.name}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default City","import React from 'react'\r\nimport style from './Cities.module.css'\r\nimport City from \"./City/City\";\r\n\r\nconst Cities = (props) => {\r\n\r\n    let cities = props.cities.map(city => {\r\n\r\n        let click = () => {\r\n            props.addCity(city.city_id, city.name)\r\n        }\r\n\r\n        //Вместо этого всего: showCity\r\n        if((props.newText.length >= 3) && (props.showCity(props.newText, city.name)))\r\n            return <City click = {click} key={city.city_id} name={city.name}/>\r\n    })\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <div className={style.cities}>\r\n                {cities}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cities","let GetLocalState = () => {\r\n    let localStateStr = localStorage.getItem('localState')\r\n    localStateStr = JSON.parse(localStateStr)\r\n    return localStateStr\r\n}\r\n\r\nexport default GetLocalState","import GetLocalState from \"./localState/GetLocalState\";\r\n\r\nconst ADD_CITY = 'ADD-CITY'\r\nconst REMOVE_CITY = 'REMOVE-CITY'\r\nconst UPDATE_TEXT = 'UPDATE-TEXT'\r\n\r\nexport const cities = require('../../assets/citiesList.json').city\r\n\r\nlet initialState = {    //Должен считывать города из JSON\r\n    selectedCities: [],\r\n    newText: ''\r\n}\r\n\r\nif (GetLocalState() === null) {\r\n\r\n    localStorage.setItem('initialState', JSON.stringify(initialState))\r\n\r\n} else initialState = GetLocalState()\r\n\r\nlet setLocalState = (state) => {\r\n    let localStateStr = JSON.stringify(state)\r\n    localStorage.clear()\r\n    localStorage.setItem('localState', localStateStr)\r\n}\r\n\r\nconst citiesReducer = (state=initialState, action) => {\r\n\r\n    let copyState\r\n\r\n    switch (action.type) {\r\n        case ADD_CITY:\r\n            let isSelected = false;\r\n            state.selectedCities.map(city => {\r\n                if(city.name === action.name)\r\n                    isSelected = true\r\n            })\r\n            if(!isSelected) {\r\n                copyState = {\r\n                    ...state,\r\n                    selectedCities: [...state.selectedCities, {id: action.id, name: action.name}],\r\n                    newText: ''\r\n                }\r\n                setLocalState(copyState)\r\n                return copyState\r\n            }\r\n            return state\r\n\r\n        case REMOVE_CITY:\r\n            copyState = {\r\n                ...state,\r\n                selectedCities: state.selectedCities.filter(city => (city.id !== action.id))\r\n                }\r\n            setLocalState(copyState)\r\n            return copyState\r\n\r\n        case UPDATE_TEXT:\r\n            copyState = {\r\n                ...state,\r\n                newText: action.text\r\n            }\r\n            setLocalState(copyState)\r\n            return copyState\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport const addCityActionCreator = (id, name) => ({type: ADD_CITY, id:id, name: name})\r\nexport const removeCityActionСreator = (id) => ({type: REMOVE_CITY, id:id})\r\nexport const updateNewTextActionCreator = (text) => ({type: UPDATE_TEXT, text: text})\r\n\r\nexport default citiesReducer","import {connect} from \"react-redux\";\r\nimport Cities from \"./Cities\";\r\nimport {addCityActionCreator, cities} from \"../../redux/reducers/citiesReducer\";\r\n\r\nconst mapStateToProps = (state) => ({cities: cities, newText: state.cities.newText})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    let showCity = (text, name) => {\r\n        let newName = ''\r\n        for(let i = 0; i < text.length; i++) {\r\n            newName += name[i]\r\n        }\r\n\r\n        if(newName === text)\r\n             return true\r\n\r\n        return false\r\n    }\r\n\r\n    return {\r\n        addCity: (id, name) => {\r\n            let action = addCityActionCreator(id, name)\r\n            dispatch(action)\r\n        },\r\n        showCity: showCity\r\n    }\r\n}\r\n\r\nconst CitiesContainer = connect(mapStateToProps, mapDispatchToProps)(Cities)\r\n\r\nexport default CitiesContainer","import React from 'react'\r\nimport style from './City.module.css'\r\n\r\nconst City = (props) => {\r\n    return (\r\n        <div className={style.city}>\r\n            <h2>{props.name}</h2>\r\n            <div className={\"material-icons \" + style.dlt} onClick={props.click}>\r\n                delete\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default City","import React from 'react'\r\nimport style from './Selected.module.css'\r\nimport City from \"./City/City\";\r\n\r\nconst Selected = (props) => {\r\n\r\n    let cities = props.cities.map(city => {\r\n\r\n        let click = () => {\r\n            props.removeCity(city.id)\r\n        }\r\n\r\n        return <City click={click} key={city.id} name={city.name}/>\r\n    })\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <div className={style.cities}>\r\n                {cities}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selected","import Selected from \"./Selected\";\r\nimport {connect} from \"react-redux\";\r\nimport {removeCityActionСreator} from \"../../redux/reducers/citiesReducer\";\r\n\r\nconst mapStateToProps = (state) => ({cities: state.cities.selectedCities})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeCity: (id) => {\r\n            const action = removeCityActionСreator(id)\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nconst SelectedContainer = connect(mapStateToProps, mapDispatchToProps)(Selected)\r\n\r\nexport default SelectedContainer","import React from 'react'\r\nimport style from './Search.module.css'\r\n\r\nconst Search = (props) => {\r\n\r\n    let onTextChange = (event) => {\r\n        let newText = event.target.value\r\n        props.updateNewText(newText)\r\n    }\r\n\r\n    return (\r\n        <div className={style.search}>\r\n            <input\r\n                className={style.input_city}\r\n                type=\"text\"\r\n                onChange={onTextChange}\r\n                value={props.text}\r\n                placeholder=\"Название города\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import Search from \"./Search\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateNewTextActionCreator} from \"../../redux/reducers/citiesReducer\";\r\n\r\nconst mapStateToProps = (state) => ({text: state.cities.newText})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateNewText: (text) => {\r\n        if (text) text = text[0].toUpperCase() + text.slice(1)\r\n        let action = updateNewTextActionCreator(text)\r\n        dispatch(action)\r\n    }\r\n})\r\n\r\nconst SearchContainer = connect(mapStateToProps, mapDispatchToProps)(Search)\r\n\r\nexport default SearchContainer","import React from 'react'\r\nimport style from './App.module.css'\r\nimport CitiesContainer from \"./components/Cities/CitiesContainer\";\r\nimport SelectedContainer from \"./components/Selected/SelectedContainer\";\r\nimport SearchContainer from \"./components/Search/SearchContainer\";\r\n\r\nconst App = () => {\r\n\r\n    return(\r\n        <div>\r\n            <div className={style.bg}/>\r\n            <div className={style.main}>\r\n                <SearchContainer />\r\n                <div className={style.cities}>\r\n                    <CitiesContainer/>\r\n                    <span className={style.scroll}>SCROLL ></span>\r\n                    <SelectedContainer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import {createStore, combineReducers} from \"redux\";\r\nimport citiesReducer from \"./reducers/citiesReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    cities: citiesReducer\r\n})\r\n\r\nlet store = createStore(reducers)\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport {Provider} from \"react-redux\";\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}